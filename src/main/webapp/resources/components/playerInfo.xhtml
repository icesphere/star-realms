<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:composite="http://java.sun.com/jsf/composite"
      xmlns:p="http://primefaces.org/ui"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:sr="http://java.sun.com/jsf/composite/components"
        >

<composite:interface>
    <composite:attribute name="player" required="true" type="org.smartreaction.starrealms.model.players.Player"/>
    <composite:attribute name="playerClass" required="true"/>
    <composite:attribute name="isOpponent" required="true"/>
    <composite:attribute name="isTheirTurn" required="true"/>
</composite:interface>

<composite:implementation>

    <h:panelGroup layout="block" id="playerInfoSection" styleClass="#{cc.attrs.playerClass}InfoSection #{cc.attrs.playerClass}">

        <h:panelGroup layout="block" class="playerInfoSectionLeftSide">
            <h:outputText value="#{cc.attrs.player.playerName}"/>
        </h:panelGroup>

        <h:panelGroup layout="block" class="playerInfoSectionInfoValues">

            <h:panelGroup layout="block" class="playerInfoSectionInfoValuesIcon">
                <h:outputText styleClass="playerInfoSectionInfoValuesIconText #{gameView.getAuthorityStyleClass(cc.attrs.player.authority)}"
                              value="#{cc.attrs.player.authority}"/>
                <h:graphicImage library="images" name="icons/authority.png" styleClass="playerInfoSectionInfoValuesIconImage"/>
                <p:commandLink value="Attack" style="margin-left: 10px; vertical-align: top;" styleClass="attackButton playerAttackButton"
                               actionListener="#{gameView.attackOpponent}" process="@this"
                               rendered="#{cc.attrs.isOpponent and gameView.opponentAttackable}"/>
            </h:panelGroup>

        </h:panelGroup>

        <h:panelGroup layout="block" class="playerContentSection">

            <h:panelGroup layout="block" styleClass="playerContentCardAreaSection">
                <h:outputText value="#{cc.attrs.player.playerName}'s Bases, Heroes, Etc." styleClass="playerContentCardAreaText"/>
                <h:panelGroup layout="block" class="playerContentCardAreaPlayArea playerContentCardAreaPlayAreaOtherCards">

                    <h:panelGroup rendered="#{!empty cc.attrs.player.bases}">
                        <div class="otherCardsSection">
                            <div>
                                <h:outputText value="Bases"/>
                            </div>
                            <div class="otherCardsSectionCards">
                                <ui:repeat value="#{cc.attrs.player.bases}" var="card">
                                    <sr:card card="#{card}" source="#{cc.attrs.playerClass}Bases"/>
                                </ui:repeat>
                            </div>
                        </div>
                    </h:panelGroup>

                    <h:panelGroup rendered="#{!empty cc.attrs.player.heroes}">
                        <div class="otherCardsSection">
                            <div>
                                <h:outputText value="Heroes"/>
                            </div>
                            <div class="otherCardsSectionCards">
                                <ui:repeat value="#{cc.attrs.player.heroes}" var="card">
                                    <sr:card card="#{card}" source="#{cc.attrs.playerClass}Heroes"/>
                                </ui:repeat>
                            </div>
                        </div>
                    </h:panelGroup>

                    <h:panelGroup rendered="#{!empty cc.attrs.player.gambits}">
                        <div class="otherCardsSection">
                            <div>
                                <h:outputText value="Gambits"/>
                            </div>
                            <div class="otherCardsSectionCards">
                                <ui:repeat value="#{cc.attrs.player.gambits}" var="card">
                                    <sr:card card="#{card}" source="#{cc.attrs.playerClass}Gambits"/>
                                </ui:repeat>
                            </div>
                        </div>
                    </h:panelGroup>

                    <h:panelGroup rendered="#{!cc.attrs.isOpponent and !empty cc.attrs.player.unClaimedMissions}">
                        <div class="otherCardsSection">
                            <div>
                                <h:outputText value="Unclaimed Missions"/>
                            </div>
                            <div class="otherCardsSectionCards">
                                <ui:repeat value="#{cc.attrs.player.unClaimedMissions}" var="mission">
                                    <sr:mission mission="#{mission}" opponentMission="false"/>
                                </ui:repeat>
                            </div>
                        </div>
                    </h:panelGroup>

                    <h:panelGroup rendered="#{!empty cc.attrs.player.claimedMissions}">
                        <div class="otherCardsSection">
                            <div>
                                <h:outputText value="Claimed Missions"/>
                            </div>
                            <div class="otherCardsSectionCards">
                                <ui:repeat value="#{cc.attrs.player.claimedMissions}" var="mission">
                                    <sr:mission mission="#{mission}" opponentMission="#{cc.attrs.isOpponent}"/>
                                </ui:repeat>
                            </div>
                        </div>
                    </h:panelGroup>

                </h:panelGroup>

                <h:panelGroup layout="block" styleClass="playerContentCardAreaDeckAndDiscardSection">

                    <p:commandLink process="@this"
                                   styleClass="playerContentCardAreaDeckAndDiscardDeck deckHolder"
                                   actionListener="#{gameView.showCards(
                                                     cc.attrs.isOpponent ? cc.attrs.player.handAndDeck : cc.attrs.player.deck,
                                                     cc.attrs.isOpponent ? 'Cards in your opponents hand and deck' : 'Cards in your deck',
                                                     cc.attrs.isOpponent ? 'opponentDeckAndHand' : 'deck', true)}">

                        <h:panelGroup layout="block" rendered="#{cc.attrs.isOpponent}" style="padding-bottom: 20px;">
                            <h:outputText value="Hand &amp;" styleClass="playerContentCardAreaDeckAndDiscardDeckText"/>
                        </h:panelGroup>

                        <div>
                            <h:outputText value="Deck" styleClass="playerContentCardAreaDeckAndDiscardDeckText" />
                        </div>

                        <h:outputText value="#{cc.attrs.isOpponent ? cc.attrs.player.handAndDeck.size() : cc.attrs.player.deck.size()}" styleClass="playerContentCardAreaDeckAndDiscardDeckValue" />

                    </p:commandLink>

                    <p:commandLink process="@this"
                                   styleClass="playerContentCardAreaDeckAndDiscardDeck #{!cc.attrs.isOpponent and gameView.highlightDiscardButton ? 'selected' : ''}"
                                   actionListener="#{gameView.showCards(
                                                     cc.attrs.player.discard,
                                                     cc.attrs.isOpponent ? 'Cards in your opponents discard pile' : 'Cards in your discard pile',
                                                     cc.attrs.isOpponent ? 'opponentDiscard' : 'discard', false)}">
                        <h:outputText value="Discard" styleClass="playerContentCardAreaDeckAndDiscardDeckText" />
                        <h:outputText value="#{cc.attrs.player.discard.size()}" styleClass="playerContentCardAreaDeckAndDiscardDeckValue" />
                    </p:commandLink>

                </h:panelGroup>

                <h:panelGroup layout="block"
                              styleClass="playerContentCardAreaShowCardsSection"
                              rendered="#{gameView.showingCards and
                                          ((gameView.showingCardsTitle.contains('opponents') and cc.attrs.isOpponent)
                                              or (!gameView.showingCardsTitle.contains('opponents') and !cc.attrs.isOpponent))}">

                              <h:outputText value="#{gameView.showingCardsTitle}" style="font-weight: bold;display:block;"/>

                              <h:panelGroup layout="block" style="float: left; padding-top: 10px;">
                                  <ui:repeat value="#{gameView.cardsToShow}" var="card">
                                      <sr:card card="#{card}" source="#{gameView.cardsToShowSource}"/>
                                  </ui:repeat>
                              </h:panelGroup>

                              <h:panelGroup layout="block" style="clear: both; padding-top: 10px;">
                                  <p:commandLink value="Hide" process="@this" styleClass="smallButton"
                                                 update="playerInfoSection"
                                                 actionListener="#{gameView.hideCardsToShow}"/>
                              </h:panelGroup>

                </h:panelGroup>

            </h:panelGroup>

            <h:panelGroup rendered="#{cc.attrs.isTheirTurn}" layout="block"
                          id="playerPlayAreaSection"
                          styleClass="playerContentCardAreaSection playerContentCardAreaPlayAreaSection">

                <h:outputText value="Play Area" styleClass="playerContentCardAreaText"  />

                <h:panelGroup layout="block" styleClass="playerContentCardAreaPlayArea">

                    <ui:repeat value="#{gameView.cardsForPlayArea}" var="card">
                        <sr:card card="#{card}" source="playArea"/>
                    </ui:repeat>

                    <h:panelGroup layout="block" styleClass="playerContentCardAreaPlayAreaBuySection">

                        <h:panelGroup layout="block" styleClass="playerContentCardAreaPlayAreaBuySectionValues">
                            <h:outputText styleClass="playerContentCardAreaPlayAreaBuySectionValuesText"
                                          value="#{gameView.game.currentPlayer.trade}"/>
                            <h:graphicImage styleClass="playerContentCardAreaPlayAreaBuySectionValuesIcon"
                                            library="images" name="icons/trade.png"/>
                        </h:panelGroup>

                        <h:panelGroup layout="block" styleClass="playerContentCardAreaPlayAreaBuySectionValues">
                            <h:outputText styleClass="playerContentCardAreaPlayAreaBuySectionValuesText"
                                          value="#{gameView.game.currentPlayer.combat}"/>
                            <h:graphicImage styleClass="playerContentCardAreaPlayAreaBuySectionValuesIcon"
                                            library="images" name="icons/combat.png" style="height: 35px; width: 35px;"/>
                        </h:panelGroup>

                    </h:panelGroup>

                </h:panelGroup>

            </h:panelGroup>

            <h:outputText class="playerContentCardAreaBuffer"> </h:outputText>
        </h:panelGroup>

    </h:panelGroup>

</composite:implementation>

</html>